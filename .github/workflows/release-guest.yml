on:
  pull_request:
    types: [closed]
    tags:
      - "v*" # Run when tag matches v*, i.e. v1.0, v20.15.10
    paths:
      - 'tortuga-guest/**'
      - '.github/workflows/release-guest.yml'
  workflow_dispatch: {}

name: Release

env:
  WINDOWS_TARGET: x86_64-pc-windows-msvc
  MACOS_TARGET: x86_64-apple-darwin
  LINUX_TARGET: x86_64-unknown-linux-musl
  CRATE_NAME: tortuga-guest

jobs:
  build:
    name: Build artifacts
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build: [linux, macos, windows]
        include:
          - build: linux
            os: ubuntu-latest
            rust: stable
          - build: macos
            os: macos-latest
            rust: stable
          - build: windows
            os: windows-latest
            rust: stable
    steps:
      - uses: actions/checkout@v2
      - name: Install Rust
        if: matrix.rust
        run: |
          rustup update ${{ matrix.rust }} --no-self-update
          rustup default ${{ matrix.rust }}
      - name: Install musl-tools (Linux)
        if: matrix.build == 'linux'
        run: |
          sudo apt-get update -y
          sudo apt-get install musl-tools -y
      - name: Install p7zip (MacOS)
        if: matrix.build == 'macos'
        run: brew install p7zip
      - name: Change Directory
        run: cd ${{ env.CRATE_NAME }}
      - name: Build (Linux)
        if: matrix.build == 'linux'
        run: |
          rustup target add ${{ env.LINUX_TARGET }}
          cargo build --release --target ${{ env.LINUX_TARGET }}
      - name: Build (MacOS)
        if: matrix.build == 'macos'
        run: cargo build --release
      - name: Build (Windows)
        if: matrix.build == 'windows'
        run: cargo build --release
        env:
          RUSTFLAGS: -Ctarget-feature=+crt-static

  publish:
    name: Pulish to crates.io
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Rust
        run: |
          rustup update stable --no-self-update
          rustup default stable
      - name: Change Directory
        run: cd ${{ env.CRATE_NAME }}
      - name: Publish
        run: |
          cargo login ${{ secrets.CRATES_IO_TOKEN }}
          cargo publish